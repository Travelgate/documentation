"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["28222"],{13954:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>h,metadata:()=>i,assets:()=>a,contentTitle:()=>l});var i=JSON.parse('{"id":"apis/for-sellers/connectors-pull-developers-api/overview/overview","title":"Connectors Pull Hotel Framework","description":"The Connectors Pull Hotel is framework for building hotel connectors within the Travelgate ecosystem. It serves as a standardization and integration tool for connecting Sellers with Buyers, ensuring compliance with Travelgate\'s best practices, business rules, and operational standards. This document provides an overview of the framework\'s purpose, architecture, and tools, along with insights into developing connectors efficiently.","source":"@site/docs/apis/for-sellers/connectors-pull-developers-api/overview/overview.mdx","sourceDirName":"apis/for-sellers/connectors-pull-developers-api/overview","slug":"/apis/for-sellers/connectors-pull-developers-api/overview/","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/overview/","draft":false,"unlisted":false,"editUrl":"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/connectors-pull-developers-api/overview/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Cancel","permalink":"/docs/apis/for-buyers/deprecated/legacy-pull-buyers-api/booking-management/cancel"},"next":{"title":"Table of Contents","permalink":"/docs/apis/for-sellers/connectors-pull-developers-api/develop-from-scratch/table-of-content"}}'),r=s(85893),t=s(50065);let o={},l="Connectors Pull Hotel Framework",a={},c=[{value:"What Is a Connector?",id:"what-is-a-connector",level:2},{value:"Why Use Connectors Pull Hotel?",id:"why-use-connectors-pull-hotel",level:2},{value:"Key Features",id:"key-features",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Core Workflow",id:"core-workflow",level:3},{value:"Benefits of Using Connectors Pull Hotel",id:"benefits-of-using-connectors-pull-hotel",level:2},{value:"Critical Business Rules in a Connector",id:"critical-business-rules-in-a-connector",level:2},{value:"Cancellation Policies",id:"cancellation-policies",level:3},{value:"Price Types and Pricing Rules",id:"price-types-and-pricing-rules",level:3}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"connectors-pull-hotel-framework",children:"Connectors Pull Hotel Framework"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Connectors Pull Hotel"})," is framework for building hotel connectors within the Travelgate ecosystem. It serves as a standardization and integration tool for connecting Sellers with Buyers, ensuring compliance with Travelgate's best practices, business rules, and operational standards. This document provides an overview of the framework's purpose, architecture, and tools, along with insights into developing connectors efficiently."]}),"\n",(0,r.jsxs)(n.p,{children:["Searching for how to develop a Connector? Visit this ",(0,r.jsx)(n.a,{href:"../develop-from-scratch/table-of-content",children:"Section"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-a-connector",children:"What Is a Connector?"}),"\n",(0,r.jsx)(n.p,{children:'A "Connector" bridges the gap between external services or APIs (usually from hotel providers) and Travelgate\'s Marketplace, specifically focusing on the Seller side. Acting as a "translator," a connector transforms data between a Seller\'s system and the Travelgate platform, enabling seamless communication between disparate formats (e.g., XML, JSON) and structures.'}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A hotel provider's API, structured in XML or JSON, may expose availability, pricing, and booking data."}),"\n",(0,r.jsx)(n.li,{children:"A connector standardizes this information into the Travelgate format, making it accessible and usable for online travel agencies (OTAs) and other distribution channels."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Each connector operates as an independent microservice, ensuring modularity, scalability, and maintainability."}),"\n",(0,r.jsx)(n.h2,{id:"why-use-connectors-pull-hotel",children:"Why Use Connectors Pull Hotel?"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Connectors Pull Hotel"})," framework provides developers with the tools and architecture needed to build robust and efficient connectors. It ensures:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standardization:"})," Adherence to Travelgate's protocols, formats, and business rules."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best Practices:"})," Built-in support for industry best practices, including error handling, logging, and performance optimization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CI/CD and Testing Tools:"})," Seamless integration with CI/CD pipelines and automated business rule testing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Efficiency:"})," Tools and patterns to maximize performance, minimize latency, and optimize resource usage."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Travelgate Standard Compliance:"})," Ensures data and operations adhere to Travelgate's specifications for uniformity and compatibility."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Support for XML and JSON APIs:"})," Easily integrates with Sellers offering XML- or JSON-based APIs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modular Design:"})," Enables connectors to function as independent microservices, simplifying deployment and scaling."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extensibility:"})," Provides a suite of extensions to implement core operations, including Search, Quote, Book, and Cancel."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsx)(n.p,{children:"The framework is designed in C# and distributed as a NuGet package. Once installed, it allows developers to create connectors that implement the required Travelgate operations using a set of predefined interfaces and tools."}),"\n",(0,r.jsx)(n.h3,{id:"core-workflow",children:"Core Workflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Data Transformation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Converts the Seller's data format into the Travelgate standard."}),"\n",(0,r.jsx)(n.li,{children:"Handles mappings, validations, and format conversions."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Operations Implementation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Provides interfaces and extensions for key hotel operations:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Search"}),": Retrieves hotel availability."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Quote"}),": Confirms the details of a specific option."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Book"}),": Completes a booking."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Cancel"}),": Cancels a reservation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CheckBookings"})," : Gets the current information of one or more existing bookings."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Testing and Validation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Includes tools to validate connector behavior against Travelgate standards."}),"\n",(0,r.jsx)(n.li,{children:"Automated tests ensure data accuracy and adherence to business rules."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"benefits-of-using-connectors-pull-hotel",children:"Benefits of Using Connectors Pull Hotel"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Faster Development:"})," Predefined patterns and tools simplify the connector creation process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistent Quality:"})," Standardized implementation ensures consistent, high-quality connectors across different Sellers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability:"})," Microservice-based architecture supports large-scale deployments with minimal maintenance overhead."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibility:"})," Easily extend or customize functionality to meet unique Seller requirements or adapt to new APIs."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"critical-business-rules-in-a-connector",children:"Critical Business Rules in a Connector"}),"\n",(0,r.jsxs)(n.p,{children:["In the Travelgate ecosystem, ",(0,r.jsx)(n.strong,{children:"critical business rules"})," within a connector are those whose incorrect interpretation or implementation can result in financial losses or operational issues. The most relevant include:"]}),"\n",(0,r.jsx)(n.h3,{id:"cancellation-policies",children:"Cancellation Policies"}),"\n",(0,r.jsx)(n.p,{children:"Accurate management of cancellation policies is essential, as mistakes can lead to incorrect charges or financial losses. The connector must correctly interpret and transform key fields such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deadline"}),": The last date to cancel without penalty, always expressed in UTC-0 and adjusted according to the supplier's time zone."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Penalty Type and Value"}),": The type of penalty (by nights, percentage, or fixed amount) and its value."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timezone"}),": The time zone in which the policy applies. If unknown, it is recommended to add a +14 hour offset to avoid unexpected penalties."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CalculatedDeadline"}),": Specifies if the deadline has been calculated by Travelgate by adding 14 hours (Timezone Unknown). This field is for informational purposes only."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Incorrect handling of these fields can result in financial discrepancies or disputes with clients. For more details, see the ",(0,r.jsx)(n.a,{href:"https://docs.travelgate.com/kb/faqs/faqs-cancel-policies/sellers-cancel-policies/",children:"Seller Cancel Policies FAQ"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"price-types-and-pricing-rules",children:"Price Types and Pricing Rules"}),"\n",(0,r.jsx)(n.p,{children:"Another critical area is the correct interpretation of price types and pricing rules, as errors here can lead to selling below cost or applying incorrect prices. For example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Binding"}),': If a price is marked as "binding," it is mandatory to sell at or above that amount. Not respecting this can result in losses or contractual breaches ',(0,r.jsx)(n.a,{href:"https://docs.travelgate.com/kb/faqs/glossary/",children:"Glossary"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In summary, the most critical business rules in a connector are those related to cancellation policies, price types, and penalties, as errors in their implementation can have a direct financial impact."})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},50065:function(e,n,s){s.d(n,{Z:()=>l,a:()=>o});var i=s(67294);let r={},t=i.createContext(r);function o(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);